CREATE OR REPLACE PROCEDURE BILL(PATIENT_ID IN PATIENTS.PAT_ID%TYPE)
IS
DAYS NUMBER(8);
BEGIN
DAYS:=CALCULATEDAYS(PATIENT_ID);
UPDATE PATIENTS SET BILL = BILL+(3000*DAYS) WHERE PAT_ID = PATIENT_ID;
DBMS_OUTPUT.PUT_LINE('FINALIZED BILL');
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('USER INVALID');
END;

CREATE OR REPLACE PROCEDURE
DISCHARGEPROCESS(P_ID IN PATIENTS.PAT_ID%TYPE)
IS
BEGIN
UPDATE PATIENTS SET ROOM_NO = NULL, ADMITTED = NULL WHERE PAT_ID = P_ID;
UPDATE ROOM SET AVAILABILITY = 'YES', OCCUPIED = 'NO', DISCHARGE = NULL, PAT_ID
= NULL WHERE PAT_ID = P_ID;
END;

CREATE OR REPLACE PROCEDURE
INSERTDOCTOR( D_NAME IN DOCTORS.DOC_NAME%TYPE, D_HIREDATE IN
DOCTORS.HIRE_DATE%TYPE, D_SALARY IN DOCTORS.SALARY%TYPE, D_NATIONALITY
IN DOCTORS.NATIONALITY%TYPE, D_DOB IN DOCTORS.DOB%TYPE, D_DEPT_ID IN
DOCTORS.DEPT_ID%TYPE)
IS
BEGIN
INSERT INTO DOCTORS(DOC_NAME, HIRE_DATE, SALARY, NATIONALITY, DOB,
DEPT_ID) VALUES(D_NAME, D_HIREDATE, D_SALARY, D_NATIONALITY, D_DOB,
D_DEPT_ID);
END;

CREATE OR REPLACE PROCEDURE INSERTPATIENT( P_NAME IN
PATIENTS.PAT_NAME%TYPE, P_GENDER IN PATIENTS.GENDER%TYPE, P_AGE IN
PATIENTS.AGE%TYPE, P_DIAGNOSIS IN PATIENTS.DIAGNOSIS%TYPE, P_DOCID IN
PATIENTS.DOC_ID%TYPE, P_ROOM IN PATIENTS.ROOM_NO%TYPE, P_BILL IN
PATIENTS.BILL%TYPE)
IS
BEGIN
INSERT INTO PATIENTS( PAT_NAME, GENDER, AGE, DIAGNOSIS, DOC_ID, ROOM_NO,
BILL, ADMITTED) VALUES (P_NAME, P_GENDER, P_AGE, P_DIAGNOSIS, P_DOCID,
P_ROOM, P_BILL, TO_DATE(SYSDATE, 'DD-MM-YYYY')); END;

CREATE OR REPLACE PROCEDURE UPDATEPATIENT( P_NAME IN
PATIENTS.PAT_NAME%TYPE, P_GENDER IN PATIENTS.GENDER%TYPE, P_AGE IN
PATIENTS.AGE%TYPE, P_DIAGNOSIS IN PATIENTS.DIAGNOSIS%TYPE, P_DOCID IN
PATIENTS.DOC_ID%TYPE, P_ROOM IN PATIENTS.ROOM_NO%TYPE, P_BILL IN
PATIENTS.BILL%TYPE, P_ADMITTED IN PATIENTS.ADMITTED%TYPE, P_INPUT_ID IN
PATIENTS.PAT_ID%TYPE)
IS
-- USER DEFINED EXCEPTION
USER_INVALID_ID EXCEPTION;
BEGIN
IF P_INPUT_ID <= 0 THEN RAISE USER_INVALID_ID; ELSE UPDATE PATIENTS SET
PAT_NAME = P_NAME, GENDER = P_GENDER, AGE = P_AGE, DIAGNOSIS = P_DIAGNOSIS,
DOC_ID = P_DOCID, ROOM_NO = P_ROOM, BILL = P_BILL, ADMITTED = P_ADMITTED
WHERE PAT_ID = P_INPUT_ID; END IF;
EXCEPTION
WHEN USER_INVALID_ID THEN
DBMS_OUTPUT.PUT_LINE('USER HAS AN INVALID ID!');
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('USER IS NOT IN THE SYSTEM');
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('ERROR!'); END;

CREATE OR REPLACE FUNCTION CALCULATEDAYS(PATIENT_ID IN
PATIENTS.PAT_ID%TYPE)
RETURN VARCHAR2 AS PATIENTDAYS VARCHAR2(40);
BEGIN SELECT (TO_DATE(SYSDATE, 'DD-MM-YYYY') - TO_DATE((SELECT
PATIENTS.ADMITTED FROM PATIENTS WHERE PATIENTS.PAT_ID =PATIENT_ID), 'DD-MMYYYY')) INTO PATIENTDAYS FROM DUAL;
--DBMS_OUTPUT.PUT_LINE(PATIENTDAYS);
RETURN PATIENTDAYS; END;